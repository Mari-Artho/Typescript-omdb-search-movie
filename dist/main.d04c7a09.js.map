{"version":3,"sources":["ts/models/iService.ts","ts/main.ts"],"names":[],"mappings":";AAsCG,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAhCH,IAAA,EAAA,WAKI,SAAA,KACJ,OALI,EAAA,UAAA,QAAA,SAAQ,GAA2C,EAAY,IAG/D,EAAA,UAAA,aAAA,SAAa,EAAe,GAA2C,EAAqB,EAAO,IAEvG,EANA,GAUA,SAAS,EAAY,GAEjB,MAAM,uDACH,KAAK,SAAA,GAAY,OAAA,EAAS,SAE1B,KAAK,SAAA,GAAa,OAAA,EAAQ,KAC1B,MAAM,SAAC,GACN,QAAQ,MAAM,SAAU,KAK9B,SAAS,EAAqB,EAAO,GAEnC,MAAM,6BAA+B,mBAAmB,GAAS,oBAC9D,KAAK,SAAA,GAAY,OAAA,EAAS,SAE1B,KAAK,SAAA,GAAa,OAAA,EAAQ,KAC1B,MAAM,SAAC,GACN,QAAQ,MAAM,SAAU,KA7BnB,QAAA,QAAA;;AC+Cb,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IArDA,IAAA,EAAA,QAAA,qBAGI,EAAoB,IAAI,EAAA,QAK5B,SAAS,EAAQ,GACf,QAAQ,IAAI,UAAA,OAAU,EAAU,MAAK,gBAAA,OAAe,EAAU,SAAQ,YAAA,OAAW,EAAU,KAAI,cAAA,OAAa,EAAU,SAGxH,SAAS,EAAQ,GAEf,SAAS,eAAe,SAAS,UAAY,EAAU,MAEvD,SAAS,eAAe,YAAY,UAAY,eAAkB,EAAU,SAE5E,SAAS,eAAe,QAAQ,UAAY,EAAU,KAElD,IAAA,EAAa,SAAS,cAAc,OACpC,EAAW,EAAU,OAExB,QAAQ,IAAI,GACb,EAAW,IAAM,EAwBnB,SAAS,IACH,IAAA,EAA2B,SAAS,eAAe,cAAe,MACtE,EAAQ,aAAa,EAAO,GAG9B,IAAI,EAAY,SAAS,eAAe,aAAa,iBAAiB,QAAS","file":"main.d04c7a09.js","sourceRoot":"../src","sourcesContent":["export interface iService {\n    getData(useData: (movieInfo: any) => void): void;\n    getMovieData(title: string, useData: (movieInfo: any) => void): void;\n}//The name of getData () can be anything. Same as naming the Variable as I like.\n\n\nexport class Service implements iService {\n    getData(useData: (movieInfo: any) => void): void { getOMDBData(useData); }\n    // parameter useData: function that shows how to use the data;\n    // the function itself takes one parameter (movieInfo) and returns void\n    getMovieData(title: string, useData: (movieInfo: any) => void): void { getMovieDataFromOMDB(title, useData); }\n    constructor() {}\n}\n\n// any means that you return either nothing (void) or anything,\n// void means that no value is returned.\nfunction getOMDBData(useData): void {\n    //Get data from API.\n    fetch(\"http://www.omdbapi.com/?i=tt3896198&apikey=453d560a\")\n      .then(response => response.json())\n      //⇩これがmap()関数だよー。\n      .then(movieInfo => useData(movieInfo))\n      .catch((error) => {\n        console.error('Error:', error);\n      }\n      );\n  }\n\n  function getMovieDataFromOMDB(title, useData): void {\n    //Get data from API.\n    fetch(\"http://www.omdbapi.com/?t=\" + encodeURIComponent(title) + \"&apikey=453d560a\")\n      .then(response => response.json())\n      //⇩これがmap()関数だよー。\n      .then(movieInfo => useData(movieInfo))\n      .catch((error) => {\n        console.error('Error:', error);\n      }\n      );\n  }","import { iService, Service } from \"./models/iService\";\n\n//たけさとがiPadを１人ずつ使いたいから、newを作るみたいな感じだよー。\nlet service: iService = new Service;\n\n//service.getData(logData);\n//service.getData(useData);\n\nfunction logData(movieInfo: { Title: string; Director: string; Year: string; Poster:string; }): void{\n  console.log(`Title: ${movieInfo.Title}, director: ${movieInfo.Director}, year: ${movieInfo.Year}, poster: ${movieInfo.Poster}`);\n}\n\nfunction useData(movieInfo: { Title: string; Director: string; Year: string;Poster:string }): void{\n  //show title\n  document.getElementById(\"title\").innerText = movieInfo.Title;\n  //show director's name\n  document.getElementById(\"director\").innerText = \"Director is \" +  movieInfo.Director;\n  //show movie's year\n  document.getElementById(\"year\").innerText = movieInfo.Year;\n  //show poster image\n  let imgElement = document.createElement(\"img\");\n  let showImg =  movieInfo.Poster;\n  //var url = showImg.createObjectURL(images);\n   console.log(showImg);\n  imgElement.src = showImg;\n}\n\n\n  //from project\n  // async function ReadAPI(url): Promise<any> {\n  //   let response = await fetch(url);\n  //   let data = await response.json();\n  //   return data;\n  // }\n\n  // async function readMovieAync(movieInfo) {\n  //   let imgUrl = movieInfo.Poster;\n  //   let m = await ReadAPI(imgUrl);\n\n  //   let poster = document.createElement(\"img\");\n  //   let showImg =  movieInfo.Poster;\n  //   poster.src=showImg;\n  //   const yearNode = document.getElementById(\"year\");\n  //   yearNode.appendChild(poster);\n}\n\n\n\nfunction search (): void{\n  let title = (<HTMLInputElement>document.getElementById(\"inputTitle\")).value;\n  service.getMovieData(title, useData);\n}\n\nlet clickBtn =  document.getElementById(\"searchBtn\").addEventListener(\"click\", search);"]}